diff --git a/mcs/class/Microsoft.Build.Utilities/Microsoft.Build.Utilities/CommandLineBuilder.cs b/mcs/class/Microsoft.Build.Utilities/Microsoft.Build.Utilities/CommandLineBuilder.cs
index c50ddf7..a3d6ba7 100644
--- a/mcs/class/Microsoft.Build.Utilities/Microsoft.Build.Utilities/CommandLineBuilder.cs
+++ b/mcs/class/Microsoft.Build.Utilities/Microsoft.Build.Utilities/CommandLineBuilder.cs
@@ -25,8 +25,6 @@
 // OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
-#if NET_2_0
-
 using System;
 using System.Collections;
 using System.Text;
@@ -49,6 +47,13 @@ namespace Microsoft.Build.Utilities
 		{
 			commandLine = new StringBuilder ();
 		}
+
+		[MonoTODO]
+		public CommandLineBuilder (bool quoteHyphensOnCommandLine) : this ()
+		{
+			if (quoteHyphensOnCommandLine)
+				throw new NotImplementedException ();
+		}
 		
 		public void AppendFileNameIfNotNull (string fileName)
 		{
@@ -134,6 +139,17 @@ namespace Microsoft.Build.Utilities
 			else
 				commandLine.Append (fileName);
 		}
+
+		protected void AppendQuotedTextToBuffer (StringBuilder buffer, string unquotedTextToAppend)
+		{
+			if (unquotedTextToAppend == null)
+				return;
+
+			if (IsQuotingRequired (unquotedTextToAppend))
+				buffer.AppendFormat ("\"{0}\"", unquotedTextToAppend);
+			else
+				buffer.Append (unquotedTextToAppend);
+		}
 		
 		protected void AppendSpaceIfNotEmpty ()
 		{
@@ -329,7 +345,7 @@ namespace Microsoft.Build.Utilities
 			}
 		}
 		
-		protected void AppendTextUnquoted (string textToAppend)
+		public void AppendTextUnquoted (string textToAppend)
 		{
 			commandLine.Append (textToAppend);
 		}
@@ -369,7 +385,11 @@ namespace Microsoft.Build.Utilities
 				return commandLine;
 			}
 		}
+		
+		public int Length {
+			get {
+				return commandLine.Length;
+			}
+		}
 	}
 }
-
-#endif
